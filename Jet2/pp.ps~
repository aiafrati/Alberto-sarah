%!PS-Adobe-3.0
%%Title: main.f
%%For: 
%%Creator: a2ps version 4.13
%%CreationDate: Mon Nov 25 11:46:50 2002
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15,000000 def
/fnfs 11 def
/bfs 8,005733 def
/cw 4,803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81,400000 mul
def
/ph
   501,959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      ) p
(program) K
( ) p
(main) L n
(C     +++++++++++++++++++++++++++++++++++++++++++++++++++++) c n
(c     ++                                                 ++) N
(c     +  programma di calcolo del flusso generato dalla   +) N
(c     +    caduta di un wedge avente un deadrise angle    +) N
(c     +               pari ad alfa \(gradi\)                +) N
(c     ++                                                 ++) N
(c     +++++++++++++++++++++++++++++++++++++++++++++++++++++) N
() p n
(c     - File inclusi: ) c n
() p n
(c       -- "slam_p.h" in cui sono riportati la definizione ) c n
(c                     delle variabili e i parametri per il ) N
(c                     dimensionamento,) N
() p n
(      ) S
(include) K
(") p
(slam_p.h) str
(") p n
(      ) S
(include) K
(") p
(slam_f.h) str
(") p n
(      ) S
(dimension) K
( yv\(npamx\),zv\(npamx\),yn\(npamx\),zn\(npamx\)) p n
(      ) S
(dimension) K
( ysl\(npamx\),zsl\(npamx\),ynsl\(npamx\),znsl\(npamx\)) p n
(      ) S
(dimension) K
( phi\(npamx\),phisl\(npamx\),phinsl\(npamx\)) p n
(      ) S
(dimension) K
( ygb\(npamx\),zgb\(npamx\)) p n
(      ) S
(dimension) K
( dddphit\(-npamx:npamx\),ddphit\(-npamx:npamx\)) p n
(      ) S
(dimension) K
( xi\(-npamx:npamx\),xin\(-npamx:npamx\)) p n
(      ) S
(dimension) K
( h\(-npamx:npamx\),dh\(-npamx:npamx\),hh\(-npamx:npamx\)) p n
(      ) S
(dimension) K
( dphi\(npamx\),dphisl\(npamx\)) p n
(      ) S
(dimension) K
( dpht\(npamx\),dphtsl\(npamx\)) p n
(      ) S
(dimension) K
( yce\(npamx\),zce\(npamx\),ycn\(npamx\),zcn\(npamx\)) p n
(      ) S
(dimension) K
( ycsl\(npamx\),zcsl\(npamx\),ycnsl\(npamx\),zcnsl\(npamx\)) p n
(      ) S
(dimension) K
( tmy\(npamx\),tmz\(npamx\),rny\(npamx\),rnz\(npamx\)) p n
(      ) S
(dimension) K
( tmysl\(npamx\),tmzsl\(npamx\),rnysl\(npamx\),rnzsl\(npamx\)) p n
(      ) S
(dimension) K
( amp\(npamx\),ampsl\(npamx\)) p n
(      ) S
(dimension) K
( vym1\(npamx\),vzm1\(npamx\),vym2\(npamx\),vzm2\(npamx\)) p n
(      ) S
(dimension) K
( vymsl1\(npamx\),vzmsl1\(npamx\),vymsl2\(npamx\),vzmsl2\(npamx\)) p n
(      ) S
(dimension) K
( depn1\(npamx\),depn2\(npamx\),zcr\(npamx\)) p n
(      ) S
(dimension) K
( kphi\(npamx\),pre\(npamx\)) p n
(      ) S
(dimension) K
( dpt\(npamx\),dpnt\(npamx\),dptsl\(npamx\),dpntsl\(npamx\)) p n
(      ) S
(dimension) K
( dpht2\(npamx\)) p n
(      ) S
(dimension) K
( pres\(npamx\),yco\(npamx\),zco\(npamx\)) p n
(      ) S
(dimension) K
( vyo\(npamx\),vzo\(npamx\),phio\(npamx\) ) p n
(      ) S
(dimension) K
( dphtbsl\(npamx\),phb\(npamx\),ph\(npamx\),dphn\(npamx\)) p n
(      ) S
(dimension) K
( dphnb\(npamx\) ) p n
(      ) S
(dimension) K
( phib\(npamx\),dphibsl\(npamx\),rl\(npamx\) ) p n
(      ) S
(dimension) K
( a1\(npamx\),b1\(npamx\),c1\(npamx\),d1\(npamx\),e1\(npamx\)) p n
(      ) S
(dimension) K
( xig\(-npamx:npamx\),xigs\(-npamx:npamx\)) p n
(      ) S
(dimension) K
( zeb\(-npamx:npamx\),zegs\(-npamx:npamx\),zef\(-npamx:npamx\)) p n
(      ) S
(dimension) K
( hp\(npamx\),xj\(npamx\),ze\(npamx\),xis\(npamx\),zes\(npamx\)) p n
(      ) S
(dimension) K
( dpttsl\(npamx\),dpb\(npamx\),dptb\(npamx\),dpntbsl\(npamx\)) p n
(      ) S
(dimension) K
( a2\(npamx\),b2\(npamx\),c2\(npamx\),d2\(npamx\),e2\(npamx\)) p n
(      ) S
(dimension) K
( pre2\(npamx\),dpt2\(npamx\)) p n
(      ) S
(dimension) K
( vxi\(npamx\),dpntt\(npamx\)) p n
(*) c n
(*) N
(      ) p
(call) K
( ) p
(input) l
(\(alfa,vfall0,ancut,iiget,jjget,frint,mg,epsgg,eskg,) p n
(     #       gfrac,rappi,frdt,ampp,pfraz,escr,estr,tend,ksta,scon,svel,) N
(     #       spot,spre,idis,ift,iford,nb,nbc,frtend\)) N
(      ) S
(call) K
( ) p
(initial) l
(\(ande,lrest,t,tust,amplim,vfall,vsopr,dzet,) p n
(     #                  llf,spo0,pro0,npc,npt,npsl,) N
(     #                  can,san,kget,ng,yv,zv,yce,zce,ysl,zsl,) N
(     #                  ycsl,zcsl,amp,ampsl,cmm0,) N
(     #                  rny,rnz,rnysl,rnzsl,tmy,tmz,tmysl,tmzsl,) N
(     #                  ampp,rappi,vfall0,alfa,dphi,phisl,kphi,pfraz,) N
(     #                  estr,escr,epsg,epsgg,ampli,proat,dddphit,ddphit\)) N
(main.f) (Pagina 1/6) (22 nov 02 15:58) title
border
/v 1 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(* - soluzione, calcolo velocita) c n
(      ) p
(call) K
( ) p
(solv1) l
(\(npc,nng,npsl,yv,zv,ygb,zgb,ysl,zsl,amp,ampsl,) p n
(     #                  phi,dphi,phisl,dphisl,jt\)) N
(*) c n
(      ) p
(call) K
( ) p
(calvel) l
(\(npsl,npc,ng,kget,mb,mf,mt,m,n,nt,ntt,) p n
(     #                 phi,phib,phb,dpht,dphi,dphisl,dphnb,dphtsl,phisl,) N
(     #                 hp,rl,a1,b1,c1,d1,e1,xj,ze,xis,zes,) N
(     #                 amp,vym1,vzm1,rny,rnz,tmy,tmz,) N
(     #                 ampsl,vymsl1,vzmsl1,rnysl,rnzsl,tmysl,tmzsl,vxi\)) N
(*) c n
(      ) p
(call) K
( ) p
(stampa) l
(\(vfall,proat,ng,kget,npc,npsl,jt,t,dt,frdt,llf,) p n
(     #                  scon,svel,spot,spre,phi,dphi,phisl,dphisl, ) N
(     #                 yv,zv,yce,zce,ysl,zsl,ycsl,zcsl,) N
(     #                 vym1,vzm1,vymsl1,vzmsl1,) N
(     #                 dpht,dphtsl,dpt,dpnt,pre,pre2,pres,vxi\)) N
(*----------------------------------------------------------------------) N
(*- inizio integrazione temporale) N
(      proat = zv\(1\)) N
(      jt    = 0) N
(      ) S
(do) K
( ) p
(while) K
( \(t) p
(.lt.) K
(tend\)) p n
(        jt=jt+1) N
(        ) S
(if) K
(\(jt) p
(.lt.) K
(30\) vfall=vfall0*) p
(float) K
(\(jt\)/) p
(float) K
(\(30\)) p n
(*- calcolo passo di integrazione, e volume) N
(        ) S
(call) K
( ) p
(check) l
(\(proat,cmm0,yv,zv,ysl,zsl,npc,npsl,dt,t,jt,) p n
(     #             ampsl,frdt,ande,tust,tsta,isp,ist,) N
(     #            vymsl1,vzmsl1,ycsl,zcsl,vym1,vzm1,kget,frtend,tend\)) N
(        ) S
(write) K
(\(*,*\) ') p
(dt jt ) str
(',dt,jt) p n
(*- spostamento \(predictor\) dei centroidi ) N
(        ) S
(write) K
(\(*,*\) ') p
(predictor) str
(') p n
(        ) S
(do) K
( ip = 1,npsl) p n
(          deph2        = vymsl1\(ip\)**2 + vzmsl1\(ip\)**2) N
(          depn1\(ip\)    = deph2/2.d0) N
(          ycnsl\(ip\)    = ycsl\(ip\) + vymsl1\(ip\)*dt) N
(          zcnsl\(ip\)    = zcsl\(ip\) + vzmsl1\(ip\)*dt) N
(          phinsl\(ip\)   = phisl\(ip\) + depn1\(ip\)*dt) N
(        ) S
(enddo) K n
(*- sposto vertice corpo) p n
(        proat = zv\(1\) - vfall*dt) N
(*- ricostruisco la configurazione di tentativo dei vertici) N
(        ) S
(call) K
( ) p
(splver2) l
(\(ycnsl,zcnsl,ynsl,znsl,npsl,proat,ande,) p n
(     #               kget,can,san,estr,ng\)) N
(*- rigriglio corpo) N
(        ) S
(call) K
( ) p
(ridis4) l
(\(0,ng,proat,kget,ynsl,znsl,ygb,zgb,) p n
(     #                  escr,san,can,npc,npt,yn,zn,ycn,zcn,ampli,epsg\)) N
(*- normali tangenti  ampiezze e boundary conditions) N
(        ) S
(call) K
( ) p
(nortan) l
(\(vfall,can,yn,zn,amp,tmy,tmz,rny,rnz,npc,) p n
(     #            ynsl,znsl,ampsl,tmysl,tmzsl,rnysl,rnzsl,npsl,) N
(     #            kphi,dphi,kget,ng,ycn,zcn,yce,zce,yv,zv,) N
(     #            ycnsl,zcnsl,ycsl,zcsl,ysl,zsl,phinsl,phisl,) N
(     #           ygb,zgb,0\)) N
(*- trattamneto getto) N
(        ) S
(if) K
(\(kget) p
(.eq.) K
(1\)) p
(then) K n
(          ) p
(call) K
( ) p
(get) l
(\(ng,nb,npc,proat,ande,ycnsl,zcnsl,ynsl,znsl,) p n
(     #               hh,h,dh,zcr,xi,xin,xig,zeb,zef,xigs,zegs\) ) N
(*) c n
(        ) p
(endif) K n
(*- risolvo il problema nella configurazione intermedia) p n
(        ) S
(print) K
(*,') p
(t_old ) str
(',t) p n
(        t   = t + dt) N
(        nng = kget*ng) N
(        ) S
(print) K
(*,') p
(t_new ) str
(',t) p n
(        ) S
(if) K
(\(kget) p
(.eq.) K
(0\)) p
(then) K n
(main.f) (Pagina 2/6) (22 nov 02 15:58) title
border
grestore
(Stampato da ) rhead
(main.f) (1/3) (luned\354 25 novembre 2002) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(          ) p
(call) K
( ) p
(solv1) l
(\(npc,nng,npsl,yn,zn,ygb,zgb,ynsl,znsl,amp,ampsl,) p n
(     #                  phi,dphi,phinsl,dphisl,jt\)) N
(        ) S
(elseif) K
(\(kget) p
(.eq.) K
(1\)) p
(then) K n
(          ) p
(call) K
( ) p
(solv2) l
(\(frint,ng,npc,npsl,nb,ycn,zcn,yn,zn,ynsl,znsl,) p n
(     #            ycnsl,zcnsl,dphi,phinsl,dphtsl,dphtbsl,phb,dh,) N
(     #             xig,xigs,zeb,zegs,zef,) N
(     #          ph,dphn,dphnb,a1,b1,c1,d1,e1,phi,phib,dphisl,dphibsl,rl,) N
(     #          mb,mf,mt,m,n,nt,ntt,hp,xj,ze,xis,zes,jt\)) N
(          ) S
(call) K
( ) p
(calsol) l
(\(mb,mf,mt,m,n,nt,ntt,phi,phib,phb,dphi,dphisl,) p n
(     #                  dphnb,phinsl,hp,rl,a1,b1,c1,d1,e1,xj,ze,xis,zes\)) N
(        ) S
(endif) K n
(*- calcolo velocita') p n
(          call calvel\(npsl,npc,ng,kget,mb,mf,mt,m,n,nt,ntt,) str n
(     #              phi,phib,phb,dpht,dphi,dphisl,dphnb,dphtsl,phinsl,) N
(     #               hp,rl,a1,b1,c1,d1,e1,xj,ze,xis,zes,) N
(     #               amp,vym2,vzm2,rny,rnz,tmy,tmz,) N
(     #               ampsl,vymsl2,vzmsl2,rnysl,rnzsl,tmysl,tmzsl,vxi\)) N
(*- spostamento definitivo dei centroidi) N
(        write\(*,*\) ) S
('corrector ') p n
(        do ip = 1,npsl) str n
(          deph2       = vymsl2\(ip\)**2 + vzmsl2\(ip\)**2) N
(          depn2\(ip\)   = deph2/2.d0) N
(          ycnsl\(ip\)   = ycsl\(ip\)+\(vymsl1\(ip\)+vymsl2\(ip\)\)*dt/2.d0) N
(          zcnsl\(ip\)   = zcsl\(ip\)+\(vzmsl1\(ip\)+vzmsl2\(ip\)\)*dt/2.d0) N
(          phinsl\(ip\)  = phisl\(ip\)+\(depn1\(ip\)+depn2\(ip\)\)*dt/2.d0) N
(        enddo) N
(*- ricostruisco la configurazione della superficie libera) N
(        call splver2\(ycnsl,zcnsl,ynsl,znsl,npsl,proat,ande,) N
(     #               kget,can,san,estr,ng\)) N
(*- calcolo angolo intersezion, event. separo \(e/o rigriglio\) il getto) N
(        call shallo\(can,san,yn,zn,ynsl,znsl,ygb,zgb,kget,jt,npsl,) N
(     #               npc,ng,ancut, anint,ampli,mg,iiget,jjget,) N
(     #               ycnsl,zcnsl,phinsl,dphisl,epsg,epsgg,eskg,gfrac\)) N
(        nng=ng*kget) N
(        mmm=mod\(jt,idis\)) N
(*- redistribuzione centroidi e vertici SL) N
(        if \(mmm.eq.0.or.jt.le.jjget\) then) N
(        call disun2\(jt,yn,zn,ampg,ng,ynsl,znsl,ycnsl,zcnsl,phinsl,npsl,) N
(     #                 ygb,zgb,escr,ancut,) N
(     #              kget,can,san,estr,amplim,ampli,npt,npc,mg,iiget\)) N
(*- ridefinizione \(e ridiscretizzazione\) dei pannelli sul corpo) N
(        call ridis4\(1,ng,proat,kget,ynsl,znsl,ygb,zgb,) N
(     #                  escr,san,can,npc,npt,yn,zn,ycn,zcn,ampli,epsg\)) N
(        else) N
(*- ridefinizione \(e ridiscretizzazione\) dei pannelli sul corpo) N
(        call ridis4\(0,ng,proat,kget,ynsl,znsl,ygb,zgb,) N
(     #                  escr,san,can,npc,npt,yn,zn,ycn,zcn,ampli,epsg\)) N
(        end if) N
(*- filtro la superficie libera) N
(        mm = mod\(jt,ift\)) N
(        if \(mm.eq.0\) then) N
(          call doldfil1\(ynsl,1+iford,npsl-10,npsl+1\)) N
(          call doldfil1\(znsl,1+iford,npsl-10,npsl+1\)) N
(          call doldfil1\(phinsl,1+iford,npsl-10,npsl\)) N
(        end if) N
(          call nortan\(vfall,can,yn,zn,amp,tmy,tmz,rny,rnz,npc,) N
(     #            ynsl,znsl,ampsl,tmysl,tmzsl,rnysl,rnzsl,npsl,) N
(     #            kphi,dphi,kget,ng,ycn,zcn,yce,zce,yv,zv,) N
(     #            ycnsl,zcnsl,ycsl,zcsl,ysl,zsl,phinsl,phisl,) N
(     #            ygb,zgb,1\)) N
(*- trattamento getto ) N
(        if\(kget.eq.1\)then) N
(main.f) (Pagina 3/6) (22 nov 02 15:58) title
border
/v 1 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(          call get\(ng,nb,npc,proat,ande,ycsl,zcsl,ysl,zsl,) str n
(     #               hh,h,dh,zcr,xi,xin,xig,zeb,zef,xigs,zegs\) ) N
(        endif) N
(        nng = kget*ng) N
(* - chiamo il solutore:) N
(* - prima ricalcolo dphtsl \(non so se serve, dipende dalle BCs) N
(      do i=1,npsl) N
(        if\(i.eq.1\)then) N
(          tf = sqrt\( \(ycsl\(i+1\)-ycsl\(i\)\)**2 + \(zcsl\(i+1\)-zcsl\(i\)\)**2 \)) N
(          dff= \(phisl\(i+1\)-phisl\(i\)\)/tf) N
(          dphtsl\(i\) = dff) N
(        elseif\(i.eq.npsl\)then) N
(          tb = sqrt\( \(ycsl\(i-1\)-ycsl\(i\)\)**2 + \(zcsl\(i-1\)-zcsl\(i\)\)**2 \)) N
(          dfb= \(phisl\(i\)-phisl\(i-1\)\)/tb) N
(          dphtsl\(i\) = dfb) N
(        else) N
(          tf = sqrt\( \(ycsl\(i+1\)-ycsl\(i\)\)**2 + \(zcsl\(i+1\)-zcsl\(i\)\)**2 \)) N
(          tb = sqrt\( \(ycsl\(i-1\)-ycsl\(i\)\)**2 + \(zcsl\(i-1\)-zcsl\(i\)\)**2 \)) N
(          dff= \(phisl\(i+1\)-phisl\(i\)\)/tf) N
(          dfb= \(phisl\(i\)-phisl\(i-1\)\)/tb) N
(          dphtsl\(i\) = 0.5d0*\(dff+dfb\)) N
(        endif) N
(      enddo) N
(        if\(jt.le.jjget\)then) N
(          call solv1\(npc,nng,npsl,yv,zv,ygb,zgb,ysl,zsl,amp,ampsl,) N
(     #                  phi,dphi,phisl,dphisl,jt\)) N
(        else) N
(          call solv2\(frint,ng,npc,npsl,nb,yce,zce,yv,zv,ysl,zsl,) N
(     #           ycsl,zcsl,dphi,phisl,dphtsl,dphtbsl,phb,dh,) N
(     #           xig,xigs,zeb,zegs,zef,ph,dphn,dphnb,a1,b1,c1,d1,e1,) N
(     #           phi,phib,dphisl,dphibsl,rl,mb,mf,mt,m,n,nt,ntt,hp,) N
(     #           xj,ze,xis,zes,jt\)) N
(          call calsol\(mb,mf,mt,m,n,nt,ntt,phi,phib,phb,dphi,dphisl,) N
(     #                  dphnb,phisl,hp,rl,a1,b1,c1,d1,e1,xj,ze,xis,zes\)) N
(        endif) N
(*- velocita) S
('   ) p n
(        ) S
(call) K
( ) p
(calvel) l
(\(npsl,npc,ng,kget,mb,mf,mt,m,n,nt,ntt,) p n
(     #                 phi,phib,phb,dpht,dphi,dphisl,dphnb,dphtsl,phisl,) N
(     #                 hp,rl,a1,b1,c1,d1,e1,xj,ze,xis,zes,) N
(     #                 amp,vym1,vzm1,rny,rnz,tmy,tmz,) N
(     #                 ampsl,vymsl1,vzmsl1,rnysl,rnzsl,tmysl,tmzsl,vxi\)) N
(*) c n
(* - PRESSIONE ------------------------------------------------------ ) N
(* -- calcolo derivata tangenziale della velocita tangenziale) N
(      nng   = ng*kget) p n
(      dphtu    = -vfall*san) N
(      dphtd    = \(phi\(2\)-phi\(1\)\)/\(0.5d0*\(amp\(1\)+amp\(2\)\)\)) N
(      dpht2\(1\) = \( dphtd - dphtu \)/amp\(1\)) N
(      dpnt\(1\)  = dpht2\(1\)*dphi\(1\)) N
(      dpntt\(1\)  = dpht2\(1\)*dphi\(1\)) N
(      i = 1 ) N
(      ) S
(do) K
( i = 2,npc+nng-1) p n
(        amu = 0.5d0*\(amp\(i-1\)+amp\(i\)\)) N
(        amd = 0.5d0*\(amp\(i+1\)+amp\(i\)\)) N
(        dpht2u    = \(dpht\(i\)-dpht\(i-1\)\)/amu) N
(        dpht2d    = \(dpht\(i+1\)-dpht\(i\)\)/amd) N
(        dpht2\(i\)  = 0.5d0*\(dpht2u+dpht2d\)) N
(        vxiu      = \(vxi\(i\)-vxi\(i-1\)\)/amu) N
(        vxid      = \(vxi\(i+1\)-vxi\(i\)\)/amd) N
(        dpht22    = 0.5d0*\(vxiu+vxid\)) N
(        dpnt\(i\)   = dpht2\(i\)*dphi\(i\)) N
(        ) S
(if) K
(\(i) p
(.ge.) K
(npc+1\)) p
(then) K
( ) p n
(main.f) (Pagina 4/6) (22 nov 02 15:58) title
border
grestore
(Stampato da ) rhead
(main.f) (2/3) (luned\354 25 novembre 2002) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(         dpntt\(i\)   = dpht22*dphi\(i\)) p n
(         ) S
(else) K n
(         dpntt\(i\)   = dpnt\(i\)) p n
(        ) S
(endif) K
(  ) p n
(      ) S
(enddo) K
(     ) p n
(      dpht2\(npc+nng\)=\(dpht\(npc+nng\)-dpht\(npc+nng-1\)\)/) N
(     #               \(0.5d0*\(amp\(npc+nng\)+amp\(npc+nng-1\)\)\)) N
(      dpnt\(npc+nng\) = dpht2\(npc+nng\)*dphi\(npc+nng\) ) N
(      dpntt\(npc+nng\) = dpnt\(npc+nng\) ) N
(* -- calcolo dphi/dt sulla SL) c n
(      ) p
(do) K
( i = 1,npsl) p n
(        dptsl\(i\) = -\(dphisl\(i\)**2 + dphtsl\(i\)**2\)/2.d0) N
(      ) S
(enddo) K n
(*) c n
(      ) p
(if) K
(\(kget) p
(.eq.) K
(0\)) p
(then) K n
(        ) p
(call) K
( ) p
(solv1) l
(\(npc,nng,npsl,yv,zv,ygb,zgb,ysl,zsl,amp,ampsl,) p n
(     #                  dpt2,dpnt,dptsl,dpntsl,jt\)) N
(      ) S
(else) K n
(        ) p
(call) K
( ) p
(solv2p) l
(\(frint,ng,npc,npsl,nb,yce,zce,yv,zv,ysl,zsl,) p n
(     #              ycsl,zcsl,dpnt,dptsl,dpttsl,dpttsl,dpb,dh,xig,xigs,) N
(     #              zeb,zegs,zef,ph,dphn,dphnb,a2,b2,c2,d2,e2,dpt,dptb,) N
(     #              dpntsl,dpntbsl,rl,mb,mf,mt,m,n,nt,ntt,hp,xj,ze,xis,) N
(     #              zes,jt\)) N
(*) c n
(        ) p
(call) K
( ) p
(calsol) l
(\(mb,mf,mt,m,n,nt,ntt,dpt,dptb,dpb,dpnt,dpntsl,dphnb,) p n
(     #             dptsl,hp,rl,a2,b2,c2,d2,e2,xj,ze,xis,zes\)) N
(        ) S
(call) K
( ) p
(solv1) l
(\(npc,nng,npsl,yv,zv,ygb,zgb,ysl,zsl,amp,ampsl,) p n
(     #                  dpt2,dpntt,dptsl,dpntsl,jt\)) N
(      ) S
(endif) K n
(*) c n
(* -- calcolo pressione e forza) N
(      ff = 0.d0) p n
(      ) S
(do) K
( i=1,npc+nng) p n
(        p1 = -dpt\(i\)) N
(        p11 = -dpt2\(i\)) N
(        p2 = -\(dphi\(i\)**2+dpht\(i\)**2\)/2.d0) N
(        pre\(i\) = p1+p2) N
(        pre2\(i\) = p11+p2) N
(        ff = ff + pre\(i\)*amp\(i\)*can ) N
(c        write\(41,'\(i6,6d15.6\)'\) i,yce\(i\),zce\(i\),p1,-p2,pre\(i\),pre2\(i\)) c n
(c        if\(i.eq.npc\) write\(41,*\)) N
(      ) p
(enddo) K n
(c      write\(41,*\)) c n
(c      write\(41,*\)) N
(      ff = 2.d0*ff) p n
(* - calcolo con Dphi/Dt) c n
(      ) p
(call) K
( ) p
(prefin) l
(\(npc,nng,npco,nngo,vfall,dt,dpht,dphi,tmy,tmz,) p n
(     #                  rny,rnz,vyo,vzo,yce,zce,yco,zco,phi,phio,) N
(     #                  vym1,vzm1,pres\)) N
(* FINE PRESSIONE -------------------------------------------------------) c n
(* - stampo) N
(      ) p
(if) K
(\() p
(mod) K
(\(jt,ksta\)) p
(.eq.) K
(0) p
(.or.) K
(jt) p
(.le.) K
(200\)) p
(then) K n
(      ) p
(call) K
( ) p
(stampa) l
(\(vfall,proat,ng,kget,npc,npsl,jt,t,dt,frdt,llf,) p n
(     #                  scon,svel,spot,spre,phi,dphi,phisl,dphisl, ) N
(     #                 yv,zv,yce,zce,ysl,zsl,ycsl,zcsl,) N
(     #                 vym1,vzm1,vymsl1,vzmsl1,) N
(     #                 dpht,dphtsl,dpt,dpnt,pre,pre2,pres,vxi\)) N
(      ) S
(endif) K n
(*) c n
(      nng = ng*kget) p n
(c      if\(jt.eq.jjget+1\)stop) c n
(cc - B+) N
(main.f) (Pagina 5/6) (22 nov 02 15:58) title
border
/v 1 store
/x0 x v get 3,362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(c      write\(31,*\) '# ',jt,zv\(1\)) c n
(c      do i=1,npc+1) N
(c        write\(31,'\(2d15.7\)'\) yv\(i\),zv\(i\)) N
(c      enddo) N
(c      write\(31,*\)  ) N
(c      write\(31,*\)  ) N
(c      write\(32,*\) '# ',jt) N
(c      do i=1,npc) N
(c        write\(32,'\(8d15.7\)'\) yce\(i\),) N
(c     #       zce\(i\),phi\(i\),dphi\(i\),) N
(c     #            dpht\(i\),vym2\(i\),vzm2\(i\) ,amp\(i\)  ) N
(c      enddo) N
(c      write\(32,*\)) N
(c      do i =1,nng) N
(c        write\(32,'\(8d15.7\)'\) 0.5d0*\(ygb\(i\)+ygb\(i+1\)\),) N
(c     #        0.5d0*\(zgb\(i\)+zgb\(i+1\)\),phi\(npc+i\),dphi\(npc+i\),) N
(c     #            dpht\(npc+i\),vym2\(npc+i\),vzm2\(npc+i\) ,amp\(npc+i\)  ) N
(c      enddo) N
(c      write\(32,*\)  ) N
(c      write\(32,*\)  ) N
(c      write\(33,*\) '# ',jt) N
(c      do i=1,npsl+1) N
(c        write\(33,'\(4d15.7\)'\) ysl\(i\),zsl\(i\)) N
(c      enddo) N
(c      write\(33,*\)  ) N
(c      write\(33,*\)  ) N
(c      write\(34,*\) '# ',jt) N
(c      do i=1,npsl) N
(c        write\(34,'\(8d15.7\)'\) 0.5d0*\(ysl\(i\)+ysl\(i+1\)\),) N
(c     #        0.5d0*\(zsl\(i\)+zsl\(i+1\)\),phisl\(i\),dphisl\(i\),) N
(c     #            dphtsl\(i\),vymsl2\(i\),vzmsl2\(i\) ,ampsl\(i\)  ) N
(c      enddo) N
(c      write\(34,*\)  ) N
(c      write\(34,*\)) N
(******************************  6) N
(      ) p
(enddo) K n
(*) c n
(      ) p
(stop) K n
(      ) p
(end) K n
(main.f) (Pagina 6/6) (22 nov 02 15:58) title
border
grestore
(Stampato da ) rhead
(main.f) (3/3) (luned\354 25 novembre 2002) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
